DATABASE (MYSQL):
CREATE DATABASE CATALOGO CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
USE CATALOGO;
-- Tabla de usuarios
CREATE TABLE usuarios (
  id INT AUTO_INCREMENT PRIMARY KEY,
  username VARCHAR(50) NOT NULL UNIQUE,
  email VARCHAR(100) NOT NULL UNIQUE,
  password VARCHAR(255) NOT NULL,
  role VARCHAR(20) NOT NULL DEFAULT 'user'
);

-- Tabla de favoritos (series)
CREATE TABLE favoritos (
  id INT AUTO_INCREMENT PRIMARY KEY,
  user_id INT NOT NULL,
  serie_id VARCHAR(50) NOT NULL,
  serie_json TEXT NOT NULL,
  UNIQUE KEY (user_id, serie_id),
  FOREIGN KEY (user_id) REFERENCES usuarios(id) ON DELETE CASCADE
);

-- Tabla de favoritos (películas)
CREATE TABLE favoritos_peliculas (
  id INT AUTO_INCREMENT PRIMARY KEY,
  user_id INT NOT NULL,
  pelicula_id VARCHAR(50) NOT NULL,
  pelicula_json TEXT NOT NULL,
  UNIQUE KEY (user_id, pelicula_id),
  FOREIGN KEY (user_id) REFERENCES usuarios(id) ON DELETE CASCADE
);

-- Tabla de tareas/todo
CREATE TABLE todo (
  id INT AUTO_INCREMENT PRIMARY KEY,
  user_id INT NOT NULL,
  titulo VARCHAR(255) NOT NULL,
  descripcion TEXT,
  completado BOOLEAN DEFAULT 0,
  FOREIGN KEY (user_id) REFERENCES usuarios(id) ON DELETE CASCADE
);

-- Tabla para JWT blacklist (revocación de tokens)
CREATE TABLE jwt_blacklist (
  token VARCHAR(512) PRIMARY KEY,
  revocado TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE guardados (
  id INT AUTO_INCREMENT PRIMARY KEY,
  user_id INT NOT NULL,
  serie_id VARCHAR(50) NOT NULL,
  serie_json TEXT NOT NULL,
  UNIQUE KEY (user_id, serie_id),
  FOREIGN KEY (user_id) REFERENCES usuarios(id) ON DELETE CASCADE
);

CREATE TABLE guardados_peliculas (
  id INT AUTO_INCREMENT PRIMARY KEY,
  user_id INT NOT NULL,
  pelicula_id VARCHAR(50) NOT NULL,
  pelicula_json TEXT NOT NULL,
  UNIQUE KEY (user_id, pelicula_id),
  FOREIGN KEY (user_id) REFERENCES usuarios(id) ON DELETE CASCADE
);



Instalar dependencias (NodeJS):
npm install express mysql2 cors bcryptjs express-rate-limit morgan jsonwebtoken
